<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="demo.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="demo.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="CHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="CHAR"/>
        <result column="user_type" property="userType" jdbcType="CHAR"/>
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP"/>
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <insert id="insertUser" parameterType="demo.model.User" useGeneratedKeys="true"
            keyProperty="id">
        insert into user (id, email, password, user_name, gender, nickname, telephone, address, salt, user_type,
                          create_at,
                          update_at)
        values (#{id, jdbcType = INTEGER}, #{email, jdbcType = VARCHAR}, #{password, jdbcType = CHAR},
                #{userName, jdbcType = VARCHAR}, #{gender, jdbcType = CHAR}, #{nickname, jdbcType = VARCHAR},
                #{telephone, jdbcType = VARCHAR}, #{address, jdbcType = VARCHAR}, #{salt, jdbcType = CHAR},
                #{userType, jdbcType = CHAR}, #{createAt, jdbcType = TIMESTAMP}, #{updateAt, jdbcType = TIMESTAMP})
    </insert>
    <update id="updateUserByUserId" parameterType="demo.model.User">
        update user
        <set>
            <if test="null != password">
                password = #{password, jdbcType = CHAR},
            </if>
            <if test="null != nickname">
                nickname = #{nickname, jdbcType = VARCHAR},
            </if>
            <if test="null != telephone">
                telephone = #{telephone, jdbcType = VARCHAR},
            </if>
            <if test="null != address">
                address = #{address, jdbcType = VARCHAR},
            </if>
        </set>
        where id = #{id, jdbcType = INTEGER}
    </update>
    <update id="updateUserByEmail">
        update user
        <set>
            <if test="null != password">
                password = #{password, jdbcType = CHAR},
            </if>
            <if test="null != nickname">
                nickname = #{nickname, jdbcType = VARCHAR},
            </if>
            <if test="null != telephone">
                telephone = #{telephone, jdbcType = VARCHAR},
            </if>
            <if test="null != address">
                address = #{address, jdbcType = VARCHAR},
            </if>
        </set>
        where email = #{email, jdbcType = VARCHAR}
    </update>
    <select id="selectUserByEmail" resultType="demo.model.User">
        select id,
               email,
               user_name,
               gender,
               nickname,
               telephone,
               address,
               create_at,
               update_at,
               password,
               salt,
               user_type
        from user
        where email = #{email, jdbcType = VARCHAR}
    </select>
    <select id="selectUserByUserId" resultType="demo.model.User">
        select id,
               email,
               user_name,
               gender,
               nickname,
               telephone,
               address,
               create_at,
               update_at,
               password,
               salt,
               user_type
        from user
        where id = #{id, jdbcType = INTEGER}
    </select>
</mapper>